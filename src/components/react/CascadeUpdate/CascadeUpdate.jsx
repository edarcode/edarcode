export default function CascadeUpdate() {
	return (
		<article className="article">
			<h1>Cascade Update</h1>
			<p>
				Un √∫ltimo problema que presentaban con su antiguo sistema de plantillas
				es que a pesar de ser capaz de realizar cambios sobre las vistas de
				forma din√°mica, cada cambio supon√≠a una cascada de cambios
				incontrolable.
			</p>
			<p>
				Un cambio en las variables de una plantilla (dar clic en un bot√≥n)
				implicaba un re-render de toda la plantilla, adem√°s, una plantilla pod√≠a
				estar formada por mas plantillas y tocaba re-cargarlas tambi√©n, por lo
				que implicaba un costo enorme para una tarea a priori sencilla. Incluso
				se presentaban situaciones en las que una plantilla se recargaba varias
				veces con 1 sola acci√≥n y esto evidentemente era muy ineficiente.
			</p>
			<h2>Objetivo</h2>
			<p>
				Evitar actualizaciones en cascada agrupando todas en 1 sola
				actualizaci√≥n y optimizar todas esas actualizaciones realizando el
				m√≠nimo n√∫mero de cambios posibles.
			</p>
			<p>
				Si delegaban esto al desarrollador de forma imperativa, cada componente
				deb√≠a ser optimizado al m√°ximo y si dicho componente estaba relacionado
				con otro deb√≠a realizarse una optimizaci√≥n del comportamiento de ambos
				cuando funcionaban juntos, es decir, todo un sacrilegio üò±.
			</p>
			<p>
				Se necesitaba un algoritmo que automatizara dicho sacrilegio, y de
				hecho, es el n√∫cleo del üëë React. El algoritmo basa su funcionamiento en
				una estructura de datos llamada{" "}
				<span className="special_word">Virtual DOM ü§ó.</span>
			</p>
		</article>
	);
}
